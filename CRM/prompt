Please implement for this Event Storming Model:

{"_type":"BoundedContext","name":"CRM","aggregates":[{"aggregateRoot":{"_type":"AggregateRoot","fieldDescriptors":[{"className":"String","name":"id","displayName":"ID","_type":"FieldDescriptor"},{"className":"String","name":"name","displayName":"이름","_type":"FieldDescriptor"},{"className":"Integer","name":"age","displayName":"나이","_type":"FieldDescriptor"},{"className":"Address","name":"address","displayName":"주소","_type":"FieldDescriptor"},{"className":"Email","name":"email","displayName":"이메일","_type":"FieldDescriptor"}]},"commands":[{"_type":"Command","fieldDescriptors":[{"className":"String","name":"name","_type":"FieldDescriptor"},{"className":"Integer","name":"age","_type":"FieldDescriptor"},{"className":"Address","name":"address","_type":"FieldDescriptor"},{"className":"Email","name":"email","_type":"FieldDescriptor"}],"name":"CreateCustomer","displayName":"고객 생성"},{"_type":"Command","fieldDescriptors":[{"className":"String","name":"id","_type":"FieldDescriptor"},{"className":"String","name":"name","_type":"FieldDescriptor"},{"className":"Integer","name":"age","_type":"FieldDescriptor"},{"className":"Address","name":"address","_type":"FieldDescriptor"},{"className":"Email","name":"email","_type":"FieldDescriptor"}],"name":"UpdateCustomer","displayName":"고객 업데이트"},{"_type":"Command","fieldDescriptors":[{"className":"String","name":"id","_type":"FieldDescriptor"}],"name":"DeleteCustomer","displayName":"고객 삭제"}],"events":[{"fieldDescriptors":[{"className":"String","name":"customerId","_type":"FieldDescriptor"},{"className":"String","name":"name","_type":"FieldDescriptor"},{"className":"Integer","name":"age","_type":"FieldDescriptor"},{"className":"Address","name":"address","_type":"FieldDescriptor"},{"className":"Email","name":"email","_type":"FieldDescriptor"}],"name":"CustomerCreated","_type":"Event"},{"fieldDescriptors":[{"className":"String","name":"customerId","_type":"FieldDescriptor"},{"className":"String","name":"name","_type":"FieldDescriptor"},{"className":"Integer","name":"age","_type":"FieldDescriptor"},{"_type":"FieldDescriptor"}],"name":"CustomerUpdated","_type":"Event"}],"name":"Customer","displayName":"고객","_type":"Aggregate"}],"policies":[]}


I want to utilize following techniques:

- clean architecture
- spring-boot3
- spring-data-rest
- JPA (must use package jakarta.persistence.* instead of javax.persistence.*)
- H2 DB
- Lombok
- Kafka with spring-cloud-streams library 
- JUnit Test


SELF-CRITICISM: 
 - when you create pom.xml, USE correct parent project to spring boot 3
 - when you create pom.xml, you MUST specify the version: 3.1.3 ONLY for the spring-cloud-streams
 - Please generate start from pom.xml


when you create execution shell (run.sh), please add '--no-transfer-progress' option not to output transfer progress if there's mvn command:

```
mvn [command] --no-transfer-progress
```

